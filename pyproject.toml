[tool.poetry]
name = "psqlpy-piccolo"
version = "0.1.3"
description = "PSQLPy-based engine for Piccolo-orm"
authors = [
    "Kiselev Aleksandr <chandr@chandr.net>",
    "Gurbanov Mikhail <my.gurbanov@gmail.com>",
]
readme = "README.md"
keywords = [
    "python",
    "postgresql",
    "psqlpy",
    "piccolo",
    "async-engine",
    "psqlpy-engine",
]
classifiers = [
    "Typing :: Typed",
    "Topic :: Database",
    "Development Status :: 4 - Beta",
    "Programming Language :: Rust",
    "Programming Language :: Python",
    "Operating System :: MacOS",
    "Operating System :: Microsoft",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.8"
piccolo = { version = "^1.14.0", extras = ["postgres"] }
psqlpy = "^0.7.4"
typing-extensions = "^4.12.2"


[tool.poetry.group.lint.dependencies]
ruff = "^0.4.7"
black = "^24.4.2"
isort = "^5.13.2"


[tool.poetry.group.dev.dependencies]
anyio = "^4.4.0"
pytest = "^8.3.1"
pytest-cov = "^5.0.0"
trio = "^0.26.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.black]
line-length = 89

[tool.mypy]
strict = true
mypy_path = "python"
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = false
warn_unused_ignores = false

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "EM",
    "FBT",
    "FIX002",
    "TRY003",
    "TD003",
    "D1",
    "D106",
    "D203",
    "D213",
    "G004",
    "FA",
    "ANN101",
    "ANN102",
    "SLF001",
    "COM812",
    "ISC001",
]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = []
lines-after-imports = 2

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = ["S101", "S311"]

[tool.coverage.report]
exclude_also = ["if typing.TYPE_CHECKING:", 'class \w+\(typing.Protocol\):']
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = '--cov=. -p no:warnings --cov-report term-missing'
